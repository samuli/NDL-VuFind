[Catalog]
host        = catalog.library.myuniversity.edu
port        = 1521
service     = VGER.catalog.library.myuniversity.edu
user        = myusername
password    = mypassword
database    = MYDB
pwebrecon   = http://catalog.library.myuniversity.edu/cgi-bin/Pwebrecon.cgi

; If this is set to false, VuFind will connect to Voyager's Oracle database with
; SERVICE_NAME in the connection string.  If set to true, it will use SID.  If
; you have connection problems, try changing this setting.
connect_with_sid = false

; The field in the PATRON table to use as a password when authenticating users;
; recommended values are LAST_NAME or PATRON_PIN (LAST_NAME is default)
login_field = LAST_NAME

; If using PATRON_PIN as login_field, allow fallback to another field if the user has no PIN
fallback_login_field = LAST_NAME

; Purchase history is enabled by default. Uncomment this to disable it.
;purchase_history = false


; These settings affect the Fund list used as a limiter in the "new items" module:
[Funds]
; Uncomment this line to turn off the fund list entirely.
;disabled = true

; If you know what values you want to allow in your fund list, include them as
; whitelist lines below.  ONLY VALUES INCLUDED IN WHITELIST LINES WILL BE SHOWN.
; Leave the whitelist commented out to get all values.
;whitelist[] = "First Good Value"
;whitelist[] = "Second Good Value"

; If you wish to exclude certain values from your fund list, include them as
; blacklist lines below.  There is no point in using blacklist lines if you have
; already set a whitelist above.
;blacklist[] = "First Bad Value"
;blacklist[] = "Second Bad Value"

; This setting can be used to limit the fund list to those that are under a specific
; fund.  Set it to 0 for top-level funds only.  Set it to a FUND_ID deeper in the 
; fund tree to filter out unwanted values.  Leave it commented out to get all funds.
;parent_fund = 0

; These settings are used by the Voyager Restful Services - details at
; http://www.exlibrisgroup.org/display/VoyagerOI/Introduction+to+Voyager+RESTful+APIs
[WebServices]
host = 1.2.3.4
port = 7014
app = vxws

; Patron and site information -- these two settings can often be set to the same value.  To
; find your possible values, use the GetUBSitesService service as documented here:
; http://www.exlibrisgroup.org/display/VoyagerOI/GetUBSitesService
; e.g. wget -O- "http://host:port/vxws/GetUBSitesService?localSitesOnlyFlag=Y"
patronHomeUbId = "1@XXXXX"
dbKey = "1@XXXXX"

; This section is used to define library codes and named values which are used by the
; system to indicate the location at which a hold is to be collected. If you leave it
; commented out, a list will automatically be generated using the getPickUpLocations
; method.  Your system will perform better if you fill this in, since it will reduce
; the number of database lookups necessary when presenting the hold form.
;[pickUpLocations]
;1 = "Library One"
;2 = "Library Two"
;3 = "Library Three"

; This section controls hold behavior; note that you must also ensure that Holds are
; enabled in the [Catalog] section of config.ini in order to take advantage of these
; settings.
[Holds]
; If a colon separated list of item statuses is provided here, only matching items
; will show hold / recall links.  Skip this setting to allow all statuses.
;valid_hold_statuses = Charged:Renewed:Overdue

; borrowable - If a colon-separated list of ids from the ITEM_TYPE table is
; provided, only matching items will be included in holds / recalls.  Skip this setting
; to allow links for all item types.
;borrowable = 1:3

; non_borrowable - If a colon-separated list of ids from the ITEM_TYPE table is
; provided, matching items will be excluded from holds / recalls.  Skip this setting
; to allow links for all item types.
;non_borrowable = 2:4:23:10

; HMACKeys - A list of hold form element names that will be analyzed for consistency
; during hold form processing. Most users should not need to change this setting.
HMACKeys = item_id:holdtype:level

; defaultRequiredDate - A colon-separated list used to set the default "not required
; after" date for holds in the format days:months:years
; e.g. 0:1:0 will set a "not required after" date of 1 month from the current date
defaultRequiredDate = 0:1:0

; extraHoldFields - A colon-separated list used to display extra visible fields in the
; place holds form. Supported values are "comments", "requiredByDate" and 
; "pickUpLocation"  
extraHoldFields = comments:requiredByDate:pickUpLocation

; A Pick Up Location Code used to pre-select the pick up location drop down list and
; provide a default option if others are not available. Must be one of the following: 
; 1) Undefined or 0 to indicate that the user always has to choose the location
; 2) empty string to indicate that the first value is default
; 3) correspond with one of the Location IDs returned by getPickUpLocations()
;defaultPickUpLocation = ""

; By default the pick up location list is sorted alphabetically. This setting can be
; used to manually set the order by entering location IDs as a colon-separated list.
;pickUpLocationOrder = 3:2:1

; The maximum number of holding items to generate request links for. The process of
; checking the API for a valid hold is intensive. Any hold items above this this 
; limit will have their hold status checked via ajax or when a user clicks on the
; link. Use "0" to check all items via ajax. Default is 15.
holdCheckLimit = 0

; By default recall is the preferred method. Uncomment this setting to disable recalls.
;enableRecalls = false

; By default item holds are enabled. Uncomment this setting to disable item holds.
;enableItemHolds = false

; By default request groups are disabled. Uncomment this setting to enable them.
;enableRequestGroups = true

; A request group ID used to pre-select the request group drop down list and
; provide a default option if others are not available. Must be one of the following:
; 1) false (default) to indicate that the user always has to choose the group
; 2) empty string to indicate that the first value is default
; 3) correspond with one of the request group IDs returned by getRequestGroups().
;defaultRequestGroup = 2

; By default the request group list is sorted alphabetically. This setting can be
; used to manually set the order by entering request group IDs as a colon-separated list.
;requestGroupOrder = 3:2:1

; By default the available pickup locations don't have to belong to the selected request group.
; Uncomment this setting to limit pickup locations to the request group.
;pickupLocationsInRequestGroup = true

; By default a title hold can be placed even when there are no items. Uncomment this
; to prevent holds if no items exist. If request groups are enabled, item existence is
; checked only in the selected request group.
;checkItemsExist = true

; By default a title hold can be placed even when there are items available. Uncomment this
; to prevent holds if items are available. If request groups are enabled, availability is
; checked only in the selected request group.
;checkItemsAvailable = true

; A colon-separated list of request group ids for which the available item check is disabled.
; If a listed request group is selected, the availability check is not made regardless of the
; setting above.
;disableAvailabilityCheckForRequestGroups = 5:12:23  

; A colon-separated list of ids from the LOCATION table. If provided, 
; items with a matching location are excluded from item availability only matching items will be available for request.
;excludedItemLocations = 2:4:23:10

; By default a patron can place a hold on material he/she already has on loan. Uncomment
; this setting to prevent placing a hold on something already on loan for the patron.
;checkLoans = true

; Optional help texts that can be displayed on the hold form
;helpText = "Help text for all languages."
;helpText[en-gb] = "Help text for English language."

; This section controls renewal behavior.
[Renewals]
; If this is set to true, we will only display "renewal" checkboxes if items are able
; to be renewed.  This may cause the "checked out items" screen to take a long time
; to display.  If you set this to false, all items will have renewal checkboxes and
; we will only check validity if a user attempts a renewal -- faster, but less
; accurate.
checkUpFront = true

; This section controls call slip behavior.
[CallSlips]
; Colon-separated list of item types where call slip is allowed
;valid_item_types = 1:2:3

; HMACKeys - A list of form element names that will be analyzed for consistency
; during form processing. Most users should not need to change this setting.
HMACKeys = item_id:mfhd_id

; extraFields - A colon-separated list used to display extra visible fields in the
; place call slip request form. Supported values are "comments", "item-issue" and
; "pickUpLocation" 
extraFields = item-issue:comments:pickUpLocation

; The maximum number of holding items to generate request links for. The process of
; checking the API for a valid call slip is intensive. Any items above this this
; limit will have their status checked via ajax or when a user clicks on the
; link. Use "0" to check all items via ajax. Default is 15.
checkLimit = 0

; Optional help texts that can be displayed on the call slip form
;helpText = "Help text for all languages."
;helpText[en-gb] = "Help text for English language."

; Custom rankings for statuses so that from multiple statuses the most important one
; is shown to the user. Lower number is more important. 
[StatusRankings]
Missing = 0
Recall Request = 99
Hold Request = 99

; PIN change parameters. The default limits are taken from the interface documentation.
[changePassword]
minLength = 5
maxLength = 12

; Universal Borrowing
[UBRequests]
; Whether UB requests are enabled
enabled = true

; HMACKeys - A list of form element names that will be analyzed for consistency
; during form processing. Most users should not need to change this setting.
HMACKeys =

; List of library codes that are used to indicate allowed UB loan pickup locations 
; within the local library. If no locations are defined, any pickup library or 
; location may be selected by the user.
; pickUpLocations = 1:2:3

; Optional help texts that can be displayed on the UB request form
;helpText = "Help text for all languages."
;helpText[en-gb] = "Help text for English language."

; Mappings from patron id prefixed to Voyager UB IDs
[UBRequestSources]
;devdb = "1@DEVDB20011102005216"

; These settings control the holdings display
[Holdings]
; By default holdings are sorted by Voyager's Holdings Sort Groups. Uncomment this
; line to disable sorting.
;use_sort_groups = false

; These settings control authorization.
[Authorization]
; Whether authorization based on login is enabled. Default is false.
;enabled = true
; An optional colon-separated list of patron stat codes that are authorized.
;stat_codes = 'S:EA'

; These settings control webpayment.
[Webpayment]
; Whether webpayment is enabled. Default is false.
;enabled = true
; Fees listed below will be treated as the accrued fines
;accruedFines[] = 'Accrued Fine'
; Fees listed below will be treat as the refused fees, i.e.
; fees that cannot be paid onlnie
;refusedFees[] = 'Lost Item Replacement'
;refusedFees[] = 'Lost Item Processing'
; Whether accrued fine blocks the payment of other patron's fees
;accruedFineBlocksPayment = false
; Whether refused fee blocks the payment of other patron's fees
; This is the only proper behaviour for Voyager as Voyager's SIP module
; does not allow partial payments (not including accrued fines)
;refusedFeeBlocksPayment = true
; Transaction fee added to the each payment (optional)
;transactionFee = 0.50
; Minimum fee allowed to be paid online (optional)
;minimumFee = 10
; Name of the webpayment handler module
;handler = 'Paytrail'
; Payment service URL (Paytrail-specific)
;service_url = 'https://payment.verkkomaksut.fi/'
; Payment service customer ID (Paytrail-specific)
;merchant_id = '12345'
; Private part of transaction fingerprints (Paytrail-specific)
;secret_key = '1234567890abcdefghijklmnopqrst'

; These settings control payment register module.
[PaymentRegister]
; Name of the payment register module
;handler = 'SIP2'
; Selfcheck service host (SIP2-specific)
;host = 1.2.3.4
; Selfcheck service part (SIP2-specific)
;port = 7031
; Selfcheck service username (SIP2-specific)
;userID = 'sip2user'
; Selfcheck service password (SIP2-specific)
;password = 'sip2pass'
; Selfcheck institution ID (SIP2-specific)
; In Voyager systems that is the Voyager location code
;locationCode = 'SIP2PAY'
